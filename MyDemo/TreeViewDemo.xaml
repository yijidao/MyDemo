<UserControl x:Class="MyDemo.TreeViewDemo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyDemo"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/ScrollViewStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <ObjectDataProvider x:Key="Datas" ObjectType="local:Schedule" MethodName="Generate"></ObjectDataProvider>
            <ObjectDataProvider x:Key="Schedules2"  ObjectType="{x:Type local:Schedule}" MethodName="GenerateHierarchical">
            </ObjectDataProvider>

            <!--Control colors.-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#000000FF"
                    Offset="0" />
                        <GradientStop Color="#600000FF"
                    Offset="0.4" />
                        <GradientStop Color="#600000FF"
                    Offset="0.6" />
                        <GradientStop Color="#000000FF"
                    Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="{x:Type TreeView}"
       TargetType="TreeView">
                <Setter Property="OverridesDefaultStyle"
          Value="True" />
                <Setter Property="SnapsToDevicePixels"
          Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeView">
                            <Border Name="Border"
                CornerRadius="1"
                BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                </Border.Background>
                                <ScrollViewer Focusable="False"
                        CanContentScroll="False"
                        Padding="4">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="ToggleButton">
                <Setter Property="Focusable"
          Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15"
              Height="13"
              Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path x:Name="Collapsed"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 4 0 L 8 4 L 4 8 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                                <Path x:Name="Expanded"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 0 4 L 8 4 L 4 8 Z"
                Visibility="Hidden">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                     StrokeThickness="5"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     Opacity="0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItem1"
       TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background"
          Value="Transparent" />
                <!--<Setter Property="HorizontalContentAlignment"
          Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment"
          Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
                <Setter Property="Padding"
          Value="1,0,0,0" />
                <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="FocusVisualStyle"
          Value="{StaticResource TreeViewItemFocusVisual}" />
                <!--<Setter Property="Height" Value="60"></Setter>-->
                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19"
                              Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)"
                                                >
                                                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="SelectedInactive">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ToggleButton x:Name="Expander"
                        Style="{StaticResource ExpandCollapseToggleStyle}"
                        ClickMode="Press"
                        IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Bd"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="PART_Header"
                              ContentSource="Header"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2"
                          Visibility="Collapsed" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems"
                   Value="false">
                                    <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader"
                         Value="false" />
                                        <Condition Property="Width"
                         Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader"
                         Value="false" />
                                        <Condition Property="Height"
                         Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VisualTreeViewExpandToggle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Foreground" Value="#ffffff"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid  Background="Transparent" >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Collapsed">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Expanded">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                               
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Path x:Name="Collapsed" Data="M0,0 L5,6 10,0" Stroke="{TemplateBinding Foreground}"></Path>
                                <Path x:Name="Expanded" Data="M0,6 L5,0 10,6" Stroke="{TemplateBinding Foreground}" Visibility="Hidden"></Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VisualTreeViewItem" TargetType="TreeViewItem">
                <Setter Property="Background"
                        Value="#0A3B5A" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <!--<Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,
    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />-->
                <!--<Setter Property="Padding"
                        Value="1,0,0,0" />-->
                <Setter Property="Foreground"
                        Value="#ffffff" />
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource TreeViewItemFocusVisual}" />
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="MinHeight" Value="40"></Setter>
                <Setter Property="MinWidth" Value="208"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                <Setter Property="Margin" Value="12 4"></Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Grid x:Name="grid1" Background="{TemplateBinding Background}" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition  />
                                </Grid.RowDefinitions>
                                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition  Width="Auto"/>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>-->

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" >
                                                    <EasingColorKeyFrame KeyTime="0" Value="#20ADC4" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="SelectedInactive" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid x:Name="Bd" Background="{TemplateBinding Background}" MinHeight="{TemplateBinding MinHeight}" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{StaticResource VisualTreeViewExpandToggle}" VerticalAlignment="Center" ClickMode="Press"
                                                  IsChecked="{Binding IsExpanded,  RelativeSource={RelativeSource TemplatedParent}}" 
                                                  VerticalContentAlignment="Center"
                                                  Margin="12 0"/>
                                    <ContentPresenter Grid.Column="1"
                                                      x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                </Grid>
                                <!--<StackPanel x:Name="Bd" Orientation="Horizontal"  Background="{TemplateBinding Background}" MinHeight="{TemplateBinding MinHeight}" >
                                    <ToggleButton x:Name="Expander" Style="{StaticResource VisualTreeViewExpandToggle}" VerticalAlignment="Center" ClickMode="Press"
                                                  IsChecked="{Binding IsExpanded,  RelativeSource={RelativeSource TemplatedParent}}" 
                                                  VerticalContentAlignment="Center"/>
                                    <ContentPresenter x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                </StackPanel>-->

                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Visibility="Collapsed" Margin="0"/>
                                <!--<ToggleButton x:Name="Expander" Style="{StaticResource VisualTreeViewExpandToggle}" VerticalAlignment="Center" ClickMode="Press"
                                              IsChecked="{Binding IsExpanded,  RelativeSource={RelativeSource TemplatedParent}}" 
                                              VerticalContentAlignment="Center"></ToggleButton>
                                <Border x:Name="Bd"
                                        Grid.Column="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        
                                        >
                                    <ContentPresenter x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed"></ItemsPresenter>-->
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems"
                                         Value="false">
                                    <Setter TargetName="Expander"
                                            Property="Visibility"
                                            Value="Hidden" />
                                    <Setter Property="Margin" Value="0"></Setter>
                                </Trigger>
                                
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader"
                                                   Value="false" />
                                        <Condition Property="Width"
                                                   Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header"
                                            Property="MinWidth"
                                            Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader"
                                                   Value="false" />
                                        <Condition Property="Height"
                                                   Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header"
                                            Property="MinHeight"
                                            Value="19" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VisualTreeView" TargetType="TreeView">
                <Setter Property="SnapsToDevicePixels"
                    Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="ItemContainerStyle" Value="{StaticResource VisualTreeViewItem}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeView">
                            <Border>
                                <ScrollViewer Style="{StaticResource CustomScrollViewerStyle}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Orientation="Horizontal" Background="#061932"  >
        <Border BorderThickness="1" BorderBrush="#14B1CC"  Margin="20">
            <TreeView ItemsSource="{Binding Source={StaticResource Schedules2}}" Style="{StaticResource VisualTreeView}">
                <TreeView.ItemTemplate >
                    <HierarchicalDataTemplate ItemsSource="{Binding Details}">
                        <TextBlock Text="{Binding Title}"></TextBlock>
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Title}"></TextBlock>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Border>

        <TreeView ItemsSource="{Binding Source={StaticResource Schedules2}}" Margin="20" ItemContainerStyle="{StaticResource TreeViewItem1}">
            <TreeView.ItemTemplate >
                <HierarchicalDataTemplate ItemsSource="{Binding Details}" >
                    <TextBlock Text="{Binding Title}" VerticalAlignment="Center"></TextBlock>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Title}" VerticalAlignment="Center"></TextBlock>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

    </StackPanel>
</UserControl>
